[tox]
requires = tox>=4
envlist = type, lint, coverage, docs, py{38,39,310,311,312}-tests

[testenv]
description = Base Environment
extras = test
set_env =
    COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
commands_pre =
    {envpython} --version
commands =
    coverage run --rcfile pyproject.toml -m pytest {posargs}

[testenv:py{38,39,310,311,312}-tests]
description = Run Unit Tests
commands_pre =
    {envpython} --version
    {envpython} -c 'import pathlib; pathlib.Path("{env_site_packages_dir}/cov.pth").write_text("import coverage; coverage.process_startup()")'

[testenv:coverage]
description = Report Code Coverage
skip_install = true
deps = coverage
parallel_show_output = true
depends = py{38,39,310,311,312}-tests
commands =
    coverage combine --quiet --rcfile pyproject.toml
    coverage report --rcfile pyproject.toml {posargs}

[testenv:type]
description = Run Static Type Check
extras = type
commands =
    mypy --config-file pyproject.toml {posargs: src}

[testenv:lint]
description = Run Code Linting
extras = lint
commands =
    ruff check --config pyproject.toml {posargs: src}
    ruff format --check --config pyproject.toml {posargs: src}
    pylint --rcfile pyproject.toml {posargs: src}

[testenv:docs]
changedir = docs
extras = doc
allowlist_externals = rm
commands =
    sphinx-build -W -b html -d {envtmpdir}/doctrees source {envtmpdir}/html
commands_post =
    rm -rf {envtmpdir}
