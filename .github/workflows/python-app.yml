# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: PyTemplate CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  style:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout PyTemplate Project
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version-default

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install wheel setuptools
          pip install tox

      - name: Code Linting & Formatting
        if: always()
        run: tox -e lint

      - name: Static Type Safety Check
        if: always()
        run: tox -e type

      - name: Confirm Documentation Builds
        run: tox -e docs

  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - name: Checkout PyTemplate Project
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install wheel setuptools
          pip install tox
          echo "TOX_VERSION=py$(echo ${{ matrix.python-version }} | tr -d .)-tests" >> $GITHUB_ENV

      - name: Unit Testing
        run: |
          tox -e ${{ env.TOX_VERSION }}

      - name: Save Coverage Data Temporarily
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.python-version }}
          path: .coverage.*
          retention-days: 1
          if-no-files-found: ignore
          include-hidden-files: true

  coverage:
    runs-on: "ubuntu-latest"
    needs: [ tests ]
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version-default

      - name: Install Dependencies
        run: |
          pip install coverage

      - name: Report Testing Coverage
        run: |
          coverage combine
          coverage report --format markdown | tee $GITHUB_STEP_SUMMARY
          coverage report

  license:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.4'

      - name: Install addlicense
        run: |
          go install github.com/google/addlicense@v1.1.1

      - name: Check for License Headers
        run: |
          addlicense -check -f LICENSE src
          addlicense -check -f LICENSE tests
